upstream uwsgi_app {
    server unix:/code/uwsgi_app.sock;
}

# Upstream for Daphne
upstream daphne {
    server unix:/code/daphne.sock;
}

server {
    listen 80;
    server_name mysite.com www.h20watch.com h20watch.com localhost 127.0.0.1;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    ssl_certificate /code/ssl/educa.crt;
    ssl_certificate_key /code/ssl/educa.key;
    server_name mysite.com www.h20watch.com h20watch.com localhost 127.0.0.1;

    error_log /dev/stderr warn;
    access_log /dev/stdout main;

    location / {
        include /etc/nginx/uwsgi_params;
        uwsgi_pass uwsgi_app;
        uwsgi_param Host $host;
        uwsgi_param X-Real-IP $remote_addr;
        uwsgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
        uwsgi_param X-Forwarded-Proto $scheme;
    }

      # Add this location block for /api/ to ensure requests are proxied correctly
    location /api/ {
        proxy_pass http://uwsgi_app;  # Ensure this points to the correct upstream
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type";
            return 204;
        }
    }

    location /ws/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;  # Corrected this line with a semicolon
        proxy_pass http://daphne;
    }

    location /static/ {
        alias /code/static/;
    }
}
